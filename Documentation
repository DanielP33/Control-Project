# Control Center Ubuntu
(general setup)
sudo apt update -y && sudo apt upgrade -y
sudo hostnamectl set-hostname controlcenter
sudo reboot

nano chave.pem
(placed my private key here)

nano debian.sh
"ssh -i chave.pem admin@172.31.31.120"

(when i type sh debian.sh it executes that script
so i dont have to type the whole command)

cp debian.sh redhat.sh
"ssh -i chave.pem ec2-user@172.31.26.167"
(same as before but for redhat)

I decided I wanted a graphical interface.
(Xfce chosen because it's performance friendly)

sudo apt install -y xfce4 xfce4-goodies
sudo apt install -y xrdp chromium-browser
sudo su -
sudo passwd ubuntu (password here so we can login through rdp)

(I shall now proceed with the Wazuh Manager installation.)
curl -sO https://packages.wazuh.com/4.7/wazuh-install.sh && sudo bash ./wazuh-install.sh -a
(You then wanna access your Wazuh GUI)
https://[IP]

(Then you shall login and proceed to Agents, follow the instructions, they are extremely
straightforward, make agents for the Debian using the Deb AMD package, REDHAT RPM AMD
package, and Windows go for msi. Use the command they give you on your according machines.)

(New Relic)
Visit the New Relic website and create an account to gain access to the 
monitoring and analysis resources offered by the platform.
Once the account has been created, generate a new API key and save it.

For the linux machines:
curl -Ls https://download.newrelic.com/install/newrelic-cli/scripts/install.sh | bash 
sudo NEW_RELIC_API_KEY='Your key here!' NEW_RELIC_ACCOUNT_ID=YOURIDHERE NEW_RELIC_REGION=EU /usr/local/bin/newrelic install -y

For windows machines:
[Net.ServicePointManager]::SecurityProtocol = 'tls12, tls'; $WebClient = New-Object System.Net.WebClient; $WebClient.DownloadFile("https://download.newrelic.com/install/newrelic-cli/scripts/install.ps1", "$env:TEMP\install.ps1"); & PowerShell.exe -ExecutionPolicy Bypass -File $env:TEMP\install.ps1; $env:NEW_RELIC_API_KEY='Your Key Here!'; $env:NEW_RELIC_ACCOUNT_ID='YOURIDHERE'; $env:NEW_RELIC_REGION='EU'; & 'C:\Program Files\New Relic\New Relic CLI\newrelic.exe' install -y
(DO NOT JUST COPY PASTE, CHANGE THE API KEY AND ID ON THE COMMANDS ABOVE.)

Or if you wanna generate your own through the website, click add data then guided install, and add your clients.


# Debian
(general setup)
sudo apt update -y && sudo apt upgrade -y
sudo hostnamectl set-hostname DebianCli
sudo reboot
sudo apt install net-tools

(wazuh integration)
wget [ the command generated by wazuh in the control center so we have the agent installed ]
sudo systemctl daemon-reload
sudo systemctl enable wazuh-agent
sudo systemctl start wazuh-agent

(docker & compose installation)
https://docs.docker.com/engine/install/debian/

mkdir nginx
(docker-compose instructions provided with documentation on the project files.)
(You should now have your nginx server on http running successfully.)





# Red Hat 
(general setup)
sudo yum update -y
sudo yum install nano
sudo nano /etc/hostname
"RedHat"
sudo reboot

(wazuh integration)
wget [ the command generated by wazuh in the control center so we have the agent installed ]
sudo systemctl daemon-reload
sudo systemctl enable wazuh-agent
sudo systemctl start wazuh-agent

(docker installation)
https://docs.docker.com/desktop/install/rhel/
mkdir apache2
(Dockerfile instructions provided with documentation on the project files.)
(You should now have your apache server on https with self-signed certificates succesfully.)


# Windows Server 2022
(Change your password on Powershell, copy the two lines below.)

$Secure_String_Pwd = ConvertTo-SecureString "Your password here" -AsPlainText -Force
Set-LocalUser administrator -Password $Secure_String_Pwd

(Reboot the system.)

(Installing IIS)
Open the server manager, Add roles and features.
Next until -> Server Roles, scroll down and select:
"Web Server (IIS)"
Proceed with the installation.

Open the IIS Manager in Tools.
Go on your machine name, and double click machine certs
Click "Create self-signed certificate"
Write a Name for the certificate and select web hosting.

Right click your website and click edit bindings and click ADD
Type: HTTPS 
SSL Cert: Select your previous self-generated cert
Click Ok, should work now.

(Wazuh Integration)
Invoke-WebRequest (... your command generated by wazuh here ...)
NET START WazuhSvc

# Windows 11






